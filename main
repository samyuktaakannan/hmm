'''
#probability
h = {"a":0.2,"c":0.3,"g":0.3,"t":0.2,"h":0.5,"l":0.5}
l = {"a":0.3,"c":0.2,"g":0.2,"t":0.3,"l":0.6,"h":0.4}

startH = 0.5
startL = 0.5

pattern = "ggcactgaa"

hp = [0.5*h[pattern[0]]]
lp = [0.5*l[pattern[0]]]

for char in pattern[1:]:
    xh = h[char] * max(hp[-1]*h['h'] , lp[-1]*l['h'])
    xl = l[char] * max(hp[-1]*h['l'] , lp[-1]*l['l'])

    hp.append(xh)
    lp.append(xl)
    
print(hp, "\n", lp)

for i,j in zip(lp, hp):
    if i>=j:
        print("L", end='')
    else:
        print("H", end='')
        
#log probability
h = {"a":-2.322,"c":-1.737,"g":-1.737,"t":-2.322,"h":-1,"l":-1}
l = {"a":-1.737,"c":-2.322,"g":-2.322,"t":-1.737,"l":-0.737,"h":-1.322}

startH = -1
startL = -1

pattern = "ggcactgaa"

hp = [startH + h[pattern[0]]]
lp = [startL + l[pattern[0]]]

for char in pattern[1:]:
    
    ha = h[char] + max(hp[-1] + h['h'], lp[-1] + l['h'])
    la = l[char] + max(hp[-1] + h['l'], lp[-1] + l['l'])

    hp.append(ha)
    lp.append(la)
    
for i,j in zip(hp, lp):

    if i>j:
        print("H", end = " ")
    else:
        print("L", end = " ")
'''

#forward algo
def forward_algorithm(sequence, states, start_prob, transition_prob, emission_prob):
    forwardprob = [{state: start_prob[state] * emission_prob[state][sequence[0]] for state in states}]
    for char in sequence[1:]:
        new_forward_probs = {}
        for state_to in states:
            prob = sum(forwardprob[-1][state_from] * transition_prob[state_from][state_to] * emission_prob[state_to][char] for state_from in states)
            new_forward_probs[state_to] = prob
        forwardprob.append(new_forward_probs)
    probability = sum(forwardprob[-1].values())
    return forwardprob, probability
sequence = "ggcactgaa"
states = ['H', 'L']
start_prob = {'H': 0.5, 'L': 0.5}
transition_prob = {'H': {'H': 0.5, 'L': 0.5}, 'L': {'H': 0.4, 'L': 0.6}}
emission_prob = {
    'H': {'a': 0.2, 'c': 0.3, 'g': 0.3, 't': 0.2, 'h': 0.5, 'l': 0.5},
    'L': {'a': 0.3, 'c': 0.2, 'g': 0.2, 't': 0.3, 'h': 0.4, 'l': 0.6}
}
forwardprob, probability = forward_algorithm(sequence, states, start_prob, transition_prob, emission_prob)
print("Forward probabilities:", forwardprob)
print("Probability of observing the sequence: ", probability)
